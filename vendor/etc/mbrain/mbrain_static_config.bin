{
    "SystemInfo": {
        "mbrainVersion": "1.0",
        "owner" : "mtk",
        "productOwner" : "dDByTkN5aHB1RHZ0dHZ1dDBy",
        "tenMintimerDurationInSeconds": 600,
        "oneHourTimerDurationInSeconds": 3600,
        "updateProcessDuration": 200,
        "dropDatabaseThresholdInSecond" : 604800,
        "appSwitchCPUFreqMonitor" : 1,
        "processMode" : 2,
        "lowPriorityDB" : 1,
        "enabledAEE" : 1,
        "performanceConstraintMode" : 1,
        "triggerGameStutterCount" : 1,
        "enableLightModeOnGame" : 0,
        "uploadTime" : {
            "packageType" : 0,
            "uploadType" : 2,
            "startTime" : 1,
            "endTime" : 4,
            "durationTimeInSecond" : 86400
        },
        "workingMode" : 3
    },

    "DatabaseInfo": {
        "version": "1.0",
        "batch_size" : 200,
        "database_mode" : 2,
        "TableInfo": {
            "MBCPU_EventPoint_CPUFreqInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventBackward_CPUFreqStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_ProcessInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventBackward_ProcessStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_ThreadInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventBackward_ThreadStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventBackward_UIDStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_MIPS_HW": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_MIPS_SW": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_CPUAffinity": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_DatabaseInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_TableInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_SystemTimeInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_StaticCPUInfo": {
                "status" : "disable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_StaticSystemInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventForward_TriggerEventInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBFtrace_EventBackward_FtraceRAWInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventForward_APPSwitchInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventForward_StaticUIDInfo": {
                "status" : "enable",
                "version" : "2.0"
            },
            "MBCommon_EventForward_APPStateChangeInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBFtrace_EventBackward_FtraceTaskStateInfo": {
                "status" : "disable",
                "version" : "1.0"
            },
            "MBMemory_EventPoint_SystemMemInfo": {
                "status" : "enable",
                "version" : "3.0"
            },
            "MBGPU_EventForward_FpsgoRuntimeInfo": {
                "status" : "enable",
                "version" : "2.0"
            },
	        "MBPower_EventBackward_RAWSPMPowerInfo": {
		        "status" : "enable",
		        "version" : "1.0"
	        },
	        "MBPower_EventForward_SystemPowerInfo": {
		        "status" : "enable",
		        "version" : "2.0"
	        },
            "MBThermal_EventPoint_ThermalInfo": {
		        "status" : "enable",
		        "version" : "1.0"
            },
            "MBMemory_EventBackward_BandwidthMemInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventForward_SystemDisplayInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBMemory_EventBackward_IdleInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBFtrace_EventBackward_FtraceIRQInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBNetwork_EventBackward_TrafficStatInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBVideo_EventPoint_RAWVideoInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventForward_BatteryCurrentInfo" : {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBLogger_EventForward_AudioUDMInfo" : {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBMemory_EventPoint_ProcessMemoryInfo": {
                "status" : "enable",
                "version" : "4.0"
            },
            "MBGPU_EventForward_FpsgoPerfIndexInfo": {
                "status" : "enable",
                "version" : "2.0"
            },
            "MBGPU_EventForward_FpsgoTargetFpsInfo": {
                "status" : "enable",
                "version" : "4.0"
            },
            "MBGPU_EventPoint_GPUStatInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventForward_SystemUSBInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBNetwork_EventForward_NetworkStatusInfo": {
                "status" : "enable",
                "version" : "2.0"
            },
            "MBPower_EventBackward_WakeLockInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBAudio_EventForward_SystemAudioInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventBackward_VcoreInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_CPUFreqCap": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_SuspendInfo": {
                "status" : "enable",
                "version" : "4.0"
            },
            "MBCPU_EventPoint_CPUIdleInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_CPUFreqCapV": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBLogger_EventBackward_Q2qtimeHistInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventForward_ProcessCPUFreqStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventPoint_BatteryInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventBackward_CPUIrqStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBMemory_EventForward_MemoryNotifyInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventBackward_FPSInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventBackward_SPMTblInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventBackward_SPMInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBThermal_EventPoint_FRSInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventBackward_DomainIpInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBNetwork_EventBackward_SystemTrafficStatInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventForward_ModemInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventForward_ModemLock": {
                "status" : "enable",
                "version" : "2.0"
            },
            "MBNetwork_EventPoint_TCPInfo": {
                "status" : "enable",
                "version" : "2.0"
            },
            "MBMemory_EventPoint_MdvInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventPoint_TraceBinderInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventPoint_VcoreVotingInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventPoint_SurfaceInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_HWStaticInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventPoint_SPML2Info": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_EnvStatusInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCPU_EventBackward_CPUIrqTimeStat": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBPower_EventPoint_SCPInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBCommon_EventNone_StaticIrqInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventBackward_GPUOppInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventBackward_GPUStateInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventBackward_GPULoadingInfo": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventPoint_T2Info": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventPoint_T3Info": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventPoint_T4Info": {
                "status" : "enable",
                "version" : "1.0"
            },
            "MBGPU_EventBackward_PerfNotifyInfo": {
                "status" : "enable",
                "version" : "1.0"
            }
        }
    },

    "ExtendInfo": {
        "MonitorProcessInfo": {
            "android.hardware.graphics.composer" : {
                "eventGroup" : {
                    "All" : {
                        "normal" : [
                            "binder"
                        ]
                    }
                }
            },
            "surfaceflinger" : {
                "eventGroup" : {
                    "All" : {
                        "normal" : [
                            "binder"
                        ]
                    },
                    "java_app_switch" : {
                        "normal" : [
                            "cpufreqdist"
                        ]
                    }
                }
            },
            "system_server" : {
                "eventGroup" : {
                    "All" : {
                        "normal" : [
                            "binder"
                        ]
                    },
                    "java_app_switch" : {
                        "normal" : [
                            "cpufreqdist"
                        ]
                    }
                }
            },
            "android.hardware.audio.service.mediatek" : {
                "eventGroup" : {
                    "audio_sse_profile" : {
                        "normal" : [
                            "thread",
                            "retired_mips"
                        ]
                    },
                    "audio_buffer_underflow" : {
                        "normal" : [
                            "thread",
                            "ftrace",
                            "affinity"
                        ]
                    }
                }
            },
            "android.hardware.media.c2" : {
                "eventGroup" : {
                    "audio_sse_profile" : {
                        "normal" : [
                            "thread",
                            "retired_mips"
                        ]
                    }
                }
            },
            "audioserver" : {
                "eventGroup" : {
                    "audio_sse_profile" : {
                        "normal" : [
                            "thread",
                            "retired_mips"
                        ]
                    },
                    "audio_buffer_underflow" : {
                        "normal" : [
                            "thread",
                            "ftrace",
                            "affinity"
                        ]
                    }
                }
            },
            "mediaserver" : {
                "eventGroup" : {
                    "audio_sse_profile" : {
                        "normal" : [
                            "thread",
                            "retired_mips"
                        ]
                    }
                }
            },
            "android.system.suspend-service" : {
                "eventGroup" : {
                    "All" : {
                        "normal" : [
                            "binder"
                        ]
                    },
                    "java_screen_change" : {
                        "normal" : [
                            "cpufreqdist"
                        ]
                    }
                }
            },
            "android.hardware.sensors-service.multihal" : {
                "eventGroup" : {
                    "All" : {
                        "normal" : [
                            "binder"
                        ]
                    }
                }
            }
        }
    },

	"sysreq": {
        "platform_00_00": {
            "sub_0": {
                "data0" : 0,
                "data1" : 0,
                "data2" : 558366718,
                "data3" : 0
            },
            "sub_1": {
                "data0" : 568590334,
                "data1" : 576978942,
                "data2" : 559939582,
                "data3" : 603455486
            }
        },
        "platform_00_01": {
            "sub_0": {
                "data0" : 0,
                "data1" : 0,
                "data2" : 279183358,
                "data3" : 0
            },
            "sub_1": {
                "data0" : 285736958,
                "data1" : 293601278,
                "data2" : 280494078,
                "data3" : 0
            }
        }
    }
}
